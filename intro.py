# -*- coding: utf-8 -*-
"""我的第二支程式.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CZKCbhyF-DAFHxoZsjYDl8Et_XC0eKlr
"""

'''
作者： 林峰正
日期： 0915
說明： 這是我第一支練習程式
'''
a = 3 # a b 是變數
b = 5
stringA = "智慧城市" # stringA 是字串變數
print ("HI!")  # print 內建函數，把東西印出來
print ("我才是林峰正")
print (a+b)
print (stringA)

x = 7.3 # 設定變數值
y = 3
total = x + y # 設定總和變數：10 = 7 + 3
print(total) # 顯示：10

type(7) # 資料類型

type(3.5)

type(x)

import numpy as np

# 從 Python 列表創建
my_list = [1, 2, 3, 4, 5]
np_array = np.array(my_list)
print(f"陣列: {np_array}")

# 向量化運算
print(f"陣列 + 10: {np_array + 10}")

# 建立 3x4 陣列並切片
data = np.arange(12).reshape((3, 4))
print("3x4 陣列:\n", data)
print("第 1 列、第 2 個元素:", data[1, 2])

from PIL import Image, ImageFilter

# 開啟圖片
img = Image.open('tsat.jpg')

# 調整圖片大小
resized_img = img.resize((400, 300))
resized_img.save('test_resized.png')

# 轉換為灰階
grayscale_img = img.convert('L')
grayscale_img.save('test_grayscale.jpg')

# 套用濾鏡 (銳化效果)
sharpened = img.filter(ImageFilter.SHARPEN)
sharpened.save('test_sharpened.jpg')

import matplotlib.pyplot as plt
import numpy as np

x = np.linspace(0, 10, 100)
y = np.sin(x)

plt.plot(x, y)
plt.title("Sine Wave")
plt.xlabel("X-axis")
plt.ylabel("Y-axis")
plt.grid(True)
plt.show()

import matplotlib.pyplot as plt
import numpy as np
from PIL import Image

# 1. Pillow 讀取圖片
img = Image.open('tsat.jpg')

# 2. 轉為 NumPy 陣列
img_array = np.array(img)

# 3. NumPy 分離通道
red_channel_img = img_array.copy()
red_channel_img[:, :, 1] = 0  # G=0
red_channel_img[:, :, 2] = 0  # B=0

green_channel_img = img_array.copy()
green_channel_img[:, :, 0] = 0  # R=0
green_channel_img[:, :, 2] = 0  # B=0

blue_channel_img = img_array.copy()
blue_channel_img[:, :, 0] = 0  # R=0
blue_channel_img[:, :, 1] = 0  # G=0

# 4. Matplotlib 顯示
plt.figure(figsize=(20, 5)) # 設定圖片大小

plt.subplot(1, 4, 1) # 指定下一個圖形要放在網格的哪個位置。
plt.imshow(img)
plt.title("Original Image")
plt.axis('on') # 顯示座標軸

plt.subplot(1, 4, 2)
plt.imshow(red_channel_img)
plt.title("Red Channel")
plt.axis('off') # 關閉顯示座標軸

plt.subplot(1, 4, 3)
plt.imshow(green_channel_img)
plt.title("Green Channel")
plt.axis('off')

plt.subplot(1, 4, 4)
plt.imshow(blue_channel_img)
plt.title("Blue Channel")
plt.axis('off')

plt.show()

plt.imshow(red_channel_img)
plt.axis('off')

plt.imshow(green_channel_img)
plt.axis('off')

plt.imshow(blue_channel_img)
plt.axis('off')